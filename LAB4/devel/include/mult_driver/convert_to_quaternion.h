// Generated by gencpp from file mult_driver/convert_to_quaternion.msg
// DO NOT EDIT!


#ifndef MULT_DRIVER_MESSAGE_CONVERT_TO_QUATERNION_H
#define MULT_DRIVER_MESSAGE_CONVERT_TO_QUATERNION_H

#include <ros/service_traits.h>


#include <mult_driver/convert_to_quaternionRequest.h>
#include <mult_driver/convert_to_quaternionResponse.h>


namespace mult_driver
{

struct convert_to_quaternion
{

typedef convert_to_quaternionRequest Request;
typedef convert_to_quaternionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct convert_to_quaternion
} // namespace mult_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::mult_driver::convert_to_quaternion > {
  static const char* value()
  {
    return "48653d5a466e82f3531a42dc323eefb0";
  }

  static const char* value(const ::mult_driver::convert_to_quaternion&) { return value(); }
};

template<>
struct DataType< ::mult_driver::convert_to_quaternion > {
  static const char* value()
  {
    return "mult_driver/convert_to_quaternion";
  }

  static const char* value(const ::mult_driver::convert_to_quaternion&) { return value(); }
};


// service_traits::MD5Sum< ::mult_driver::convert_to_quaternionRequest> should match
// service_traits::MD5Sum< ::mult_driver::convert_to_quaternion >
template<>
struct MD5Sum< ::mult_driver::convert_to_quaternionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::mult_driver::convert_to_quaternion >::value();
  }
  static const char* value(const ::mult_driver::convert_to_quaternionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::mult_driver::convert_to_quaternionRequest> should match
// service_traits::DataType< ::mult_driver::convert_to_quaternion >
template<>
struct DataType< ::mult_driver::convert_to_quaternionRequest>
{
  static const char* value()
  {
    return DataType< ::mult_driver::convert_to_quaternion >::value();
  }
  static const char* value(const ::mult_driver::convert_to_quaternionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::mult_driver::convert_to_quaternionResponse> should match
// service_traits::MD5Sum< ::mult_driver::convert_to_quaternion >
template<>
struct MD5Sum< ::mult_driver::convert_to_quaternionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::mult_driver::convert_to_quaternion >::value();
  }
  static const char* value(const ::mult_driver::convert_to_quaternionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::mult_driver::convert_to_quaternionResponse> should match
// service_traits::DataType< ::mult_driver::convert_to_quaternion >
template<>
struct DataType< ::mult_driver::convert_to_quaternionResponse>
{
  static const char* value()
  {
    return DataType< ::mult_driver::convert_to_quaternion >::value();
  }
  static const char* value(const ::mult_driver::convert_to_quaternionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MULT_DRIVER_MESSAGE_CONVERT_TO_QUATERNION_H
